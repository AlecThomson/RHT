{
  "name": "RHT",
  "tagline": "The Rolling Hough Transform",
  "body": "## Introduction\r\n\r\nThis is the Rolling Hough Transform, described in [Clark, Peek, & Putman 2014, ApJ 789, 82](http://adsabs.harvard.edu/cgi-bin/bib_query?arXiv:1312.1338) (arXiv:1312.1338). \r\n\r\nThe RHT is a machine vision code that measures linear intensity as a function of orientation in images. The RHT was used to discover that diffuse neutral hydrogen features in the Milky Way are very well aligned with the interstellar magnetic field ([Clark, Peek, & Putman 2014](http://adsabs.harvard.edu/cgi-bin/bib_query?arXiv:1312.1338), [Clark et al. 2015](http://adsabs.harvard.edu/abs/2015PhRvL.115x1302C)).\r\n\r\nThis code is written and maintained by [Susan E Clark](http://user.astro.columbia.edu/~seclark/). Please feel free to get in touch with any questions, and please create pull requests to suggest improvements.\r\n\r\nIncluded is a modified RHT which distinguishes between pixels located at theta, and at theta+pi, in polar coordinates centered on any given image pixel. This is achieved by searching along radii with twice the dtheta of the diameters searched in the RHT. This Transform is still in development.\r\n\r\n## Requirements (Python 2.7 Only)\r\n\r\nTo run the RHT you'll need [numpy](http://www.numpy.org/), [scipy](https://www.scipy.org/), and [astropy](http://www.astropy.org/) (for reading fits files). \r\n\r\n## Instructions For Use (interactive python environment)\r\n\r\n1. Ensure your Python 2.7 Environment is as up-to-date as possible and contains the required imports. The code has been tested on both Windows and Mac operating systems. \r\n\r\n    `python --version //Currently Supports 2.7.5`\r\n\r\n2. Ensure you are able to import the package:\r\n\r\n    `import rht`\r\n\r\n3. Run the RHT for individual files or directories, given a number of parameters. Output will be placed alongside the input files in the .fits format, with a record of the parameters that created it:\r\n\r\n    `rht.main()` Runs the RHT, after asking for user input, with default parameters\r\n\r\n    `rht.main('filepath')` Runs the RHT for a given image or within a given directory with default parameters\r\n\r\n    `rht.main('filepath', flag=value, param=value)` Runs with some flag set to a boolean and some param set to a number\r\n\r\n4. Explanation of `rht.main()` Flags and Parameters\r\n\r\n   **Flags**:   \r\n     `force=False`: If True, forcefully overwrites existing RHT data with same parameter values.     \r\n     `drht=False` : If True, runs the directional RHT, which returns output on a full, rather than half, polar domain.\r\n     \r\n   **Parameters**:    \r\n     `wlen=55.0`  : Set window diameter in pixels.    \r\n     `smr=11.0`   : Set smoothing radius in pixels.    \r\n     `frac=0.70`  : Set theta power threshold. \r\n\r\n## Instructions For Use (Terminal)\r\n\r\nCommand Line Argument Format:\r\n    `python rht.py filename.fits arg1 arg2 ... argn`\r\n\r\nFor a list of possible arguments, run     \r\n    `python rht.py --help`\r\n    \r\nYour first argument must be the .fits file to run the RHT on. After that you may assign any number of the following arguments:    \r\n\r\n  **Flags**: \r\n  `'-f', '--force'` : Force overwrite RHT output run with same parameters.     \r\n  `'-d', '--drht'`  : Compute Directional RHT (full polar domain).\r\n  \r\n  **Params**:    \r\n  `'-w', '--wlen' =value` : Sets window diameter    \r\n  `'-s', '--smr' =value` : Sets smoothing radius\r\n  `'-t', '--thresh' =value` : Sets theta power threshold\r\n\r\n\r\n## Other Information\r\n\r\nInput: .fits file    \r\nOutput: .fits file containing two HDUs:\r\n        [0] RHT backprojection, or an image of RHT intensity integrated over all thetas.     \r\n        [1] (i, j) coordinates in image space, and R(theta) for each image coordinate     \r\n\r\nThe RHT is more expensive the larger your window length. \r\n\r\n## Publications that use the RHT\r\nPlease get in touch if you have a publication that you'd like to add to the list!\r\n\r\n* Koch & Rosolowsky 2015, [Filament identification through mathematical morphology](http://adsabs.harvard.edu/abs/2015MNRAS.452.3435K)    \r\n* Malinen et al. 2016, [Matching dust emission structures and magnetic field in high-latitude cloud L1642: comparing Herschel and Planck maps](http://adsabs.harvard.edu/abs/2016MNRAS.460.1934M)    \r\n* Panopoulou,Psaradaki, & Tassis 2016, [The magnetic field and dust filaments in the Polaris Flare](http://adsabs.harvard.edu/abs/2016MNRAS.462.1517P)\r\n* Inoue & Inutsuka 2016, [Formation of HI Clouds in Shock-compressed Interstellar Medium: Physical Origin of Angular Correlation Between Filamentary Structure and Magnetic Field](http://adsabs.harvard.edu/abs/2016arXiv160802601I)\r\n\r\n## Attribution\r\n\r\nIf use of the RHT results in a publication, please cite [Clark, Peek, & Putman 2014, ApJ 789, 82](http://adsabs.harvard.edu/cgi-bin/bib_query?arXiv:1312.1338)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}