==================================
The Rolling Hough Transform (RHT)
==================================

This is the Rolling Hough Transform, described in Clark, Peek, Putman 2014 (arXiv:1312.1338).

==================================
Requirements (Python 2.7 Only)
==================================
from __future__ import division
import numpy as np
import scipy.ndimage
import math
from astropy import wcs
from astropy.io import fits
import os
import matplotlib.pyplot as plt
import sys
import string

==================================
Instructions For Use (Python)
==================================
1. Ensure your Python 2.7 Environment is as up-to-date as possible and contains the required imports

2. Ensure you are able to import the package

>>>import rht 

3. Run the RHT for individual files or directories, with various parameters
   Output will be placed alongside the input files in the .npz format

>>>rht.main('filepath') #Runs only the RHT for individual images or directories with default params

>>>rht.main('filepath', flag=value, param=value) #Runs with flag set to a boolean and param set to a float

4. Explanation of rht.main() Flags and Parameters
   Flags: 
     display=True  #Ouput is to be Displayed
     force=True    #Exisitng _xyt.npz is to be Forcefully overwritten
   Params:
     wlen=value  #Sets window diameter
     smr=value   #Sets smoothing radius
     frac=value  #Sets theta power threshold

5. Interpret 'filepath_xyt.npz' to produce a backprojection and theta-frequency plot

>>>rht.interpret('filepath') #Will first call rht.rht('filepath') if necessary
>>>rht.interpret('filepath', force=True) #Will ALWAYS call rht.rht('filepath', force=True) first

6. Displays the results of previously Interpreted RHT data

>>>rht.viewer('filepath') #Will first call rht.interpret('filepath') if necessary
>>>rht.viewer('filepath', force=True) #Will ALWAYS call rht.interpret('filepath', force=True) first

==================================
Instructions For Use (Terminal)
==================================
Command Line Argument Format:
 >>>python rht.py arg1 arg2 ... argn 

NO ARGS:
 Displays README and exits
 >>>python rht.py

SINGLE ARGS:
 pathname ==> Input file or directory to run the RHT on
 >>>python rht.py dirname/filename.fits
  
 -h ==> Displays this message
 >>>python rht.py help

 -p ==> Displays Default Params
 >>>python rht.py -p
 
MULTIPLE ARGS:
 Creates 'dirname/filename_xyt.npz' for each input image
 1st ==> Path to input file or directory
 2nd:nth ==> Named inputs controlling params and flags

  Flags: 
  -d  #Ouput is to be Displayed
  -f  #Exisitng _xyt.npz is to be Forcefully overwritten

  Params:
  -wlen=value  #Sets window diameter
  -smr=value  #Sets smoothing radius
  -frac=value  #Sets theta power threshold

==================================
Directory Structure
==================================
RHT:
|__This README

|__The rht.py python module, based on fastrht.py for performing the Hough Transform

|__Batches of Image files:

   |__Each image and their computed _xyt.npz, _backproj.npy, and _spectrum.npy outputs

|__lrginput:

   |__Image files >1MB which may need to be divided

|__Git version control information

==================================
Other Information
==================================
|__input:

   |__Manageable .fits,.npy,etc image files <1MB
   |__If imx,imy are the image dimensions, and wlen the window size,
   |__O(RHT) ~ (imx-wlen)*(imy-wlen)*Ntheta(wlen)*wlen^2

|__output:

   |__i,j coordinates in image space, and the theta powers at that coordinate 
   |__Holds a sparse 3D xytheta space determined by rht parameters  
   |__A column in xytheta space is accessible by zipping _hi and _hj
   |__Such that xytheta[_hi[n]][_hj[n]] = _hthets[n], and is zero everywhere else

