==================================
The Rolling Hough Transform (RHT)
==================================

This is the Rolling Hough Transform, described in Clark, Peek, Putman 2014 (arXiv:1312.1338).

==================================
Requirements (Python 2.7 Only)
==================================
from __future__ import division
import numpy as np
import scipy
import scipy.ndimage
import math
from astropy import wcs
from astropy.io import fits
import os
from matplotlib.pyplot import plot, show, subplot, imshow, title, ylim, contour
import copy
import sys
import string

==================================
Instructions For Use (Terminal)
==================================
Command Line Argument Format:
>>>python rht.py arg1 arg2 ... argn 

NO ARGS:
 Displays README (#TODO or this message) and exits
 >>>python rht.py

SINGLE ARGS:
 pathname ==> Input file or directory to run the RHT on
 >>>python rht.py dirname/filename.fits
  
 -h, help ==> Displays this message (#TODO or README)
 >>>python rht.py help

 -p, params ==> Displays Default Params (#TODO Maybe)
 >>>python rht.py -p
 
MULTIPLE ARGS:
 Creates 'dirname/filename_xyt.npz' for each input image
 1st ==> Path to input file or directory
 2nd:nth ==> Named inputs controlling params and flags
  Flags: 
  -d  #Sets whether ouput is displayed
  Params:
  -wlen=value  #Sets window diameter
  -smr=value  #Sets smoothing radius
  -frac=value  #Sets theta power threshold

==================================
Instructions For Use (Python)
==================================
1. Ensure your Python 2.7 Environment is as up-to-date as possible

2. Ensure you are able to import the package

>>>import rht

3. Call the following code for single files, or in batch mode, with current params
   Output will be placed alongside the input files in the .npz format

>>>rht.main('batch_directory') #For Batch Jobs or Individual Images
>>>rht.rht('filepath') #For Individual Images

4. Looks for 'filepath_xyt.npz' to produce a backprojection and theta-frequency plot

>>>f.interpret('filepath') 

5. Loads and displays the results of previously analyzed data

>>>f.viewer('filepath')

==================================
#TODO
==================================

?. To modify wlen, smr, or frac manually, run setParams() 
   wlen : Diameter of a 'window' - the data to be evaluated at one time
   frac : fraction (percent) of one angle that must be 'lit up' to be counted
   smr  : smoothing radius of unsharp mask function.

>>>gassslice, datay, datax = getData('filepath')
>>>wlen, frac, smr, ucntr, wcntr, ntheta, dtheta, theta, mask = setParams(gassslice, wlen, smr, frac)
>>>hthets, hi, hj = window_step(gassslice, wlen, frac, smr, ucntr, wcntr, theta, ntheta, mask)
>>>np.save('test_hi.npy', hi)
>>>np.save('test_hj.npy', hj)
>>>np.save('test_hthets.npy', hthets)



==================================
Directory Structure
==================================

RHT:
|__This README

|__Updated rht.py python module

|__Code based on fastrht.py for performing the Hough Transform

|__Batches of image files and their computed outputs


==================================
Other Information
==================================
|__lrginput:

   |__Image files >1MB which may need to be divided

|__input:

   |__Manageable .fits,.npy,etc image files <1MB
   |__If imx,imy are the image dimensions, and wlen the window size,
   |__O(RHT) ~ (imx-wlen)*(imy-wlen)*Ntheta(wlen)*wlen^2

|__output:

   |__i,j coordinates in image space, and the theta powers at that coordinate 
   |__Holds a sparse 3D xytheta space determined by rht parameters  
   |__A column in xytheta space is accessible by zipping _hi and _hj
   |__Such that xytheta[_hi[n]][_hj[n]] = _hthets[n], and is zero everywhere else

